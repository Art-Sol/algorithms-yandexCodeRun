/**
 * Вам даны два отсортированных целочисленных массива nums1 и nums2, нужно
 * поместить все элементы nums2 в nums1 так, чтобы элементы итогового массива
 * остались отсортированными.
 *
 * Формат ввода [46,55,88,0,0,0,0] 3 [18,29,80,90] 4
 * Примечание количество элементов в массивах nums1 и nums2 равны m и n соотвественно;
 * можно считать, что в массиве nums1 зарезервированно место для всех элементов (n + m) и
 * заполнены нулями;
 * результат должен сохраниться в переменной nums1, результат функции явно
 * возвращать не обязательно
 */

/**
 * @param {number[]} nums1 - первый отсортированный массив
 * @param {number} m - количество значимых элементов в nums1
 * @param {number[]} nums2 - второй отсортированный массив
 * @param {number} n - количество элементов в nums2
 * @return {void} Не возвращайте ничего, вместо этого модифицируйте nums1.
 */
function merge(nums1, m, nums2, n) {
  let cursor1 = m - 1;
  let cursor2 = n - 1;

  for (let i = nums1.length - 1; i >= 0; i--) {
    if (nums2[cursor2] >= nums1[cursor1] || cursor1 < 0) {
      nums1[i] = nums2[cursor2];
      cursor2--;
    } else {
      nums1[i] = nums1[cursor1];
      cursor1--;
    }
  }

  return nums1;
}

console.log(merge([46, 55, 88, 0, 0, 0, 0], 3, [18, 29, 80, 90], 4)); // [ 18, 29, 46, 55, 80, 88, 90 ]
